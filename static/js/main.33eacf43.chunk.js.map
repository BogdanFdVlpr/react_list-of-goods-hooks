{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","valueStart","setValueStart","none","sortBy","setSortBy","valueReverse","setValueReverse","visibleGoods","oldGoods","goods","sort","good1","good2","alphabet","localeCompare","length","reverse","map","good","newList","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0DAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwCL,oBAAS,GAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAnCR,SACEJ,EACAK,EACAH,GAEA,IAAMI,EAAK,YAAOD,GAsBlB,OApBAC,EAAMC,MAAK,SAACC,EAAOC,GACjB,OAAQT,GACN,KAAKP,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAITV,GACFI,EAAMO,UAGJb,IAAWP,EAASM,MACtBL,EAAgBoB,KAAI,SAAAC,GAAI,OAAIA,KAGvBT,EAQcU,CAAQhB,EAAQN,EAAiBQ,GAEtD,OACE,sBAAKe,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACGpB,GACC,wBACEqB,KAAK,SACLD,UAAU,+BACVE,QAAS,kBAAMrB,GAAc,IAH/B,sBAUFD,GACA,qCACE,sBAAKoB,UAAU,iBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMlB,EAAUR,EAASiB,WAHpC,iCAQA,wBACEQ,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMlB,EAAUR,EAASmB,SAHpC,4BAQA,wBACEM,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMhB,GAAiBD,IAHlC,qBAQA,wBACEgB,KAAK,SACLD,UAAU,kCACVE,QAAS,WACPlB,EAAUR,EAASM,MACnBI,GAAgB,IALpB,sBAYF,qBAAKc,UAAU,OAAf,SACE,oBAAIA,UAAU,QAAd,SACGb,EAAaU,KAAI,SAAAC,GAAI,OACpB,oBAEEE,UAAU,cAFZ,SAIGF,GAHIA,iBCnHvBK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33eacf43.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.min.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  none,\n  alphabet,\n  length,\n}\n\nfunction newList(\n  sortBy: SortType,\n  oldGoods: string[],\n  valueReverse: boolean,\n) {\n  const goods = [...oldGoods];\n\n  goods.sort((good1, good2) => {\n    switch (sortBy) {\n      case SortType.alphabet:\n        return good1.localeCompare(good2);\n      case SortType.length:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (valueReverse) {\n    goods.reverse();\n  }\n\n  if (sortBy === SortType.none) {\n    goodsFromServer.map(good => good);\n  }\n\n  return goods;\n}\n\nexport const App: React.FC = () => {\n  const [valueStart, setValueStart] = useState(true);\n  const [sortBy, setSortBy] = useState(SortType.none);\n  const [valueReverse, setValueReverse] = useState(false);\n\n  const visibleGoods = newList(sortBy, goodsFromServer, valueReverse);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__container\">\n        {valueStart && (\n          <button\n            type=\"button\"\n            className=\"button is-info button__start\"\n            onClick={() => setValueStart(false)}\n          >\n            Start\n          </button>\n        )}\n      </div>\n\n      {!valueStart && (\n        <>\n          <div className=\"App__container\">\n            <button\n              type=\"button\"\n              className=\"button is-rounded\"\n              onClick={() => setSortBy(SortType.alphabet)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-rounded\"\n              onClick={() => setSortBy(SortType.length)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-rounded\"\n              onClick={() => setValueReverse(!valueReverse)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-success button__reset\"\n              onClick={() => {\n                setSortBy(SortType.none);\n                setValueReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n\n          <div className=\"list\">\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li\n                  key={good}\n                  className=\"Goods__item\"\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}