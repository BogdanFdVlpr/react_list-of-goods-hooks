{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","valueStart","setValueStart","nameButton","setNameButton","valueReverse","setValueReverse","goods","sort","good1","good2","localeCompare","length","reverse","map","good","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"0MAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,QAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAOT,GAsBlB,OApBAS,EAAMC,MAAK,SAACC,EAAOC,GACjB,OAAQP,GACN,IAAK,WACH,OAAOM,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITP,GACFE,EAAMM,UAGW,SAAfV,GACFL,EAAgBgB,KAAI,SAAAC,GAAI,OAAIA,KAI5B,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACGf,GACC,wBACEgB,KAAK,SACLD,UAAU,+BACVE,QAAS,kBAAMhB,GAAc,IAH/B,sBAUFD,GACA,qCACE,sBAAKe,UAAU,iBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMd,EAAc,aAH/B,iCAQA,wBACEa,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMd,EAAc,WAH/B,4BAQA,wBACEa,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMZ,GAAiBD,IAHlC,qBAQA,wBACEY,KAAK,SACLD,UAAU,kCACVE,QAAS,WACPd,EAAc,QACdE,GAAgB,IALpB,sBAYF,qBAAKU,UAAU,OAAf,SACE,oBAAIA,UAAU,QAAd,SACGT,EAAMO,KAAI,SAAAC,GAAI,OACb,oBAEEC,UAAU,cAFZ,SAIGD,GAHIA,iBClGvBI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.16624e61.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.min.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [valueStart, setValueStart] = useState(true);\n  const [nameButton, setNameButton] = useState('none');\n  const [valueReverse, setValueReverse] = useState(false);\n  const goods = [...goodsFromServer];\n\n  goods.sort((good1, good2) => {\n    switch (nameButton) {\n      case 'alphabet':\n        return good1.localeCompare(good2);\n      case 'length':\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (valueReverse) {\n    goods.reverse();\n  }\n\n  if (nameButton === 'none') {\n    goodsFromServer.map(good => good);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__container\">\n        {valueStart && (\n          <button\n            type=\"button\"\n            className=\"button is-info button__start\"\n            onClick={() => setValueStart(false)}\n          >\n            Start\n          </button>\n        )}\n      </div>\n\n      {!valueStart && (\n        <>\n          <div className=\"App__container\">\n            <button\n              type=\"button\"\n              className=\"button is-rounded\"\n              onClick={() => setNameButton('alphabet')}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-rounded\"\n              onClick={() => setNameButton('length')}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-rounded\"\n              onClick={() => setValueReverse(!valueReverse)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-success button__reset\"\n              onClick={() => {\n                setNameButton('none');\n                setValueReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n\n          <div className=\"list\">\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li\n                  key={good}\n                  className=\"Goods__item\"\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}